[
    {
        "key": "python.pythonPath",
        "title": "Python Interpreter",
        "type": "enum",
        "resolve": "python.resolveEnvs",
        "allowCustom": true
    },
    {
        "title": "Set as built-in interpreter",
        "description": "Other extensions (including the Python Debug tasks) may use the built-in python.interpreter setting.",
        "type": "command",
        "command": "python.copyInterpreter"
    },
    {
        "type": "section",
        "title": "Language Server (Pyright)",
        "link": "https://microsoft.github.io/pyright/#/settings",
        "children": [
            {
                "key": "python.pyrightEnabled",
                "title": "Enable language server",
                "description": "Whether to enable language server integration for this project.",
                "type": "boolean",
                "default": true
            },
            {
                "key": "python.analysis.typeCheckingMode",
                "title": "Type checking mode",
                "description": "How much type checking you want to do.",
                "type": "enum",
                "values": [
                    ["off", "Off"],
                    ["basic", "Basic"],
                    ["strict", "Strict"]
                ],
                "default": "basic"
            },
            {
                "key": "python.analysis.diagnosticMode",
                "title": "Diagnostic mode",
                "description": "Whether to report issues for all files in the workspace, or open files only.",
                "type": "enum",
                "values": [
                    ["openFilesOnly", "Open files only"],
                    ["workspace", "All files in workspace"]
                ],
                "default": "openFilesOnly"
            },
            {
                "key": "pyright.disableTaggedHints",
                "title": "Disable tagged hints",
                "description": "Disables the use of hint diagnostics with special tags (for example: `x is not accessed`)",
                "type": "boolean",
                "default": false
            },
            {
                "key": "python.pyrightPath",
                "title": "Executable",
                "description": "Leave blank to use the extension default.",
                "type": "path",
                "placeholder": "(default)"
            },
            {
                "key": "python.analysis.stubPath",
                "title": "Stub path",
                "description": "A folder to look for type stubs in. Leave blank to use the extension default.",
                "type": "path",
                "allowFiles": false,
                "allowFolders": true
            },
            {
                "key": "python.analysis.extraPaths",
                "title": "Extra paths",
                "description": "Additional paths to include in analysis.",
                "type": "pathArray",
                "allowFiles": false,
                "allowFolders": true
            }
        ]
    },
    {
        "type": "section",
        "title": "Formatter",
        "link": "https://docs.astral.sh/ruff/formatter/",
        "children": [
            {
                "key": "python.formatterPath",
                "title": "Executable",
                "description": "Path to a `ruff` or `black` executable. Leave blank to find automatically.",
                "type": "path",
                "placeholder": "(default)"
            },
            {
                "key": "python.formatterArgs",
                "title": "Additional Arguments",
                "description": "The --quiet option is always set. The --stdin-filename option is set when a filename is available.",
                "type": "stringArray",
                "default": null
            },
            {
                "key": "python.formatOnSave",
                "title": "Format on save",
                "type": "boolean",
                "default": false
            }
        ]
    },
    {
        "type": "section",
        "title": "Linter",
        "link": "https://docs.astral.sh/ruff/linter/",
        "children": [
            {
                "key": "python.linterPath",
                "title": "Executable",
                "description": "Path to the `ruff` executable. Leave blank to find automatically.",
                "type": "path",
                "placeholder": "(default)"
            },
            {
                "key": "python.linterArgs",
                "title": "Additional Arguments",
                "description": "The --output-format and --quiet options are always set.",
                "type": "stringArray"
            },
            {
                "key": "python.linterCheckMode",
                "title": "Check Mode",
                "description": "An event on which to perform a check.",
                "type": "enum",
                "values": [
                    ["onChange", "On file change"],
                    ["onSave", "On file save"],
                    ["-", "Command only"]
                ],
                "default": "onChange"
            },
            {
                "key": "python.fixOnSave",
                "title": "Fix violations on save",
                "type": "boolean",
                "default": false
            },
            {
                "key": "python.organizeOnSave",
                "title": "Organize imports on save",
                "type": "boolean",
                "default": false
            }
        ]
    },
    {
        "type": "section",
        "title": "Pip",
        "children": [
            {
                "key": "python.pipRequirements",
                "title": "Frozen requirements",
                "type": "path",
                "relative": true,
                "placeholder": "requirements.txt"
            },
            {
                "key": "python.pipRequirementsInput",
                "title": "Input requirements",
                "description": "Optional. Top-level requirements from which to update and generate frozen requirements. Do not include dependencies you don't use directly.",
                "type": "path",
                "relative": true,
                "placeholder": "requirements.in"
            },
            {
                "key": "python.pipExclude",
                "title": "Exclude packages on freeze",
                "description": "",
                "type": "stringArray"
            },
            {
                "key": "python.pipUpgradeStrategy",
                "title": "Upgrade strategy",
                "description": "",
                "type": "enum",
                "values": [
                    ["only-if-needed", "Only if needed (default)"],
                    ["eager", "Eager"]
                ],
                "default": "only-if-needed"
            }
        ]
    },
    {
        "type": "section",
        "title": "Cleanup",
        "children": [
            {
                "key": "python.cleanupCacheFiles",
                "title": "Clean cache files and directories",
                "description": "Removes all *.pyc files and __pycache__ directories.",
                "type": "boolean",
                "default": true
            },
            {
                "key": "python.cleanupBuildDirs",
                "title": "Clean build artifacts",
                "description": "Removes top-level dist, build, and egg-info directories.",
                "type": "boolean",
                "default": false
            },
            {
                "key": "python.cleanupExtras",
                "title": "Clean additional files or directories",
                "description": "Removes additional files or directories relative to your workspace root.",
                "type": "pathArray",
                "allowFiles": true,
                "allowFolders": true,
                "relative": true
            }
        ]
    }
]
