{
    "identifier": "net.danwatson.Python",
    "name": "Python",
    "organization": "Dan Watson",
    "description": "Batteries-included Python support for Nova.",
    "version": "1.0",
    "categories": [
        "commands",
        "languages",
        "sidebars",
        "formatters",
        "issues",
        "tasks"
    ],
    "repository": "https://github.com/nova-python/Python.novaextension",
    "bugs": "https://github.com/nova-python/Python.novaextension/issues",

    "main": "main.js",

    "entitlements": {
        "process": true,
        "filesystem": "readwrite"
    },

    "activationEvents": [
        "onLanguage:python",
        "onWorkspaceContains:*.py",
        "onWorkspaceContains:requirements.txt",
        "onWorkspaceContains:requirements.in",
        "onWorkspaceContains:pyrightconfig.json"
    ],

    "config": [
        {
            "key": "python.venvDirs",
            "title": "Virtual Environment Search Paths",
            "description": "Folders to search for virtual environments in.",
            "type": "pathArray",
            "allowFiles": false,
            "allowFolders": true
        },
        {
            "type": "section",
            "title": "Language Server (Pyright)",
            "link": "https://microsoft.github.io/pyright/#/settings",
            "children": [
                {
                    "key": "python.pyrightPath",
                    "title": "Executable",
                    "description": "Path to the pyright-langserver executable.",
                    "type": "path",
                    "placeholder": "/opt/homebrew/bin/pyright-langserver"
                },
                {
                    "key": "python.analysis.stubPath",
                    "title": "Stub path",
                    "description": "Optional. A folder to look for type stubs in.",
                    "type": "path",
                    "allowFiles": false,
                    "allowFolders": true
                }
            ]
        },
        {
            "type": "section",
            "title": "Formatter (Black)",
            "link": "https://black.readthedocs.io/en/stable/",
            "children": [
                {
                    "key": "python.formatterPath",
                    "title": "Executable",
                    "description": "Path to the Black executable. Leave blank to try to automatically determine the location.",
                    "type": "path",
                    "placeholder": "/opt/homebrew/bin/black"
                },
                {
                    "key": "python.formatterArgs",
                    "title": "Additional Arguments",
                    "description": "The --quiet option is always set. The --stdin-filename option is set when a filename is available.",
                    "type": "stringArray",
                    "default": null
                }
            ]
        },
        {
            "type": "section",
            "title": "Linter (Ruff)",
            "link": "https://docs.astral.sh/ruff/",
            "children": [
                {
                    "key": "python.linterPath",
                    "title": "Executable",
                    "description": "Path to the Ruff executable. Leave blank to try to automatically determine the location.",
                    "type": "path",
                    "placeholder": "/opt/homebrew/bin/ruff"
                },
                {
                    "key": "python.linterArgs",
                    "title": "Additional Arguments",
                    "description": "The --format and --quiet options are always set.",
                    "type": "stringArray"
                }
            ]
        },
        {
            "type": "section",
            "title": "Pip",
            "children": [
                {
                    "key": "python.pipAuditPath",
                    "title": "pip-audit Executable",
                    "description": "Path to the pip-audit executable. Leave blank to try to automatically determine the location.",
                    "type": "path",
                    "placeholder": "/opt/homebrew/bin/pip-audit"
                }
            ]
        }
    ],

    "configWorkspace": [
        {
            "key": "python.pythonPath",
            "title": "Python Interpreter",
            "type": "enum",
            "resolve": "python.resolveEnvs",
            "allowCustom": true
        },
        {
            "title": "Set as built-in interpreter",
            "description": "Other extensions (including the Python Debug tasks) may use the built-in python.interpreter setting.",
            "type": "command",
            "command": "python.copyInterpreter"
        },
        {
            "type": "section",
            "title": "Language Server (Pyright)",
            "link": "https://microsoft.github.io/pyright/#/settings",
            "children": [
                {
                    "key": "python.pyrightEnabled",
                    "title": "Enable language server",
                    "description": "Whether to enable language server integration for this project.",
                    "type": "boolean",
                    "default": true
                },
                {
                    "key": "python.analysis.typeCheckingMode",
                    "title": "Type checking mode",
                    "description": "How much type checking you want to do.",
                    "type": "enum",
                    "values": [
                        ["off", "Off"],
                        ["basic", "Basic"],
                        ["strict", "Strict"]
                    ],
                    "default": "basic"
                },
                {
                    "key": "python.analysis.diagnosticMode",
                    "title": "Diagnostic mode",
                    "description": "Whether to report issues for all files in the workspace, or open files only.",
                    "type": "enum",
                    "values": [
                        ["openFilesOnly", "Open files only"],
                        ["workspace", "All files in workspace"]
                    ],
                    "default": "openFilesOnly"
                },
                {
                    "key": "python.pyrightPath",
                    "title": "Executable",
                    "description": "Leave blank to use the extension default.",
                    "type": "path",
                    "placeholder": "(default)"
                },
                {
                    "key": "python.analysis.stubPath",
                    "title": "Stub path",
                    "description": "A folder to look for type stubs in. Leave blank to use the extension default.",
                    "type": "path",
                    "allowFiles": false,
                    "allowFolders": true
                },
                {
                    "key": "python.analysis.extraPaths",
                    "title": "Extra paths",
                    "description": "Additional paths to include in analysis.",
                    "type": "pathArray",
                    "allowFiles": false,
                    "allowFolders": true
                }
            ]
        },
        {
            "type": "section",
            "title": "Formatter (Black)",
            "link": "https://black.readthedocs.io/en/stable/",
            "children": [
                {
                    "key": "python.formatterPath",
                    "title": "Executable",
                    "description": "Path to the Black executable. Leave blank to use the extension default.",
                    "type": "path",
                    "placeholder": "(default)"
                },
                {
                    "key": "python.formatterArgs",
                    "title": "Additional Arguments",
                    "description": "The --quiet option is always set. The --stdin-filename option is set when a filename is available.",
                    "type": "stringArray",
                    "default": null
                },
                {
                    "key": "python.formatOnSave",
                    "title": "Format on save",
                    "type": "boolean",
                    "default": false
                }
            ]
        },
        {
            "type": "section",
            "title": "Linter (Ruff)",
            "link": "https://docs.astral.sh/ruff/",
            "children": [
                {
                    "key": "python.linterPath",
                    "title": "Executable",
                    "description": "Path to the Ruff executable. Leave blank to use the extension default.",
                    "type": "path",
                    "placeholder": "(default)"
                },
                {
                    "key": "python.linterArgs",
                    "title": "Additional Arguments",
                    "description": "The --format and --quiet options are always set.",
                    "type": "stringArray"
                },
                {
                    "key": "python.linterCheckMode",
                    "title": "Check Mode",
                    "description": "An event on which to perform a check.",
                    "type": "enum",
                    "values": [
                        ["onChange", "On file change"],
                        ["onSave", "On file save"],
                        ["-", "Command only"]
                    ],
                    "default": "onChange"
                }
            ]
        },
        {
            "type": "section",
            "title": "Pip",
            "children": [
                {
                    "key": "python.pipRequirements",
                    "title": "Frozen requirements",
                    "type": "path",
                    "relative": true,
                    "placeholder": "requirements.txt"
                },
                {
                    "key": "python.pipRequirementsInput",
                    "title": "Input requirements",
                    "description": "Optional. Top-level requirements from which to update and generate frozen requirements. Do not include dependencies you don't use directly.",
                    "type": "path",
                    "relative": true,
                    "placeholder": "requirements.in"
                }
            ]
        }
    ],

    "commands": {
        "editor": [
            {
                "title": "Format",
                "paletteTitle": "Format (Black)",
                "command": "python.formatWithBlack",
                "shortcut": "cmd-shift-B",
                "filters": {
                    "syntaxes": ["python"]
                }
            },
            {
                "title": "Check",
                "paletteTitle": "Check (Ruff)",
                "command": "python.checkWithRuff",
                "shortcut": "shift-cmd-8",
                "filters": {
                    "syntaxes": ["python"]
                }
            },
            {
                "title": "Fix Violations",
                "paletteTitle": "Fix Violations (Ruff)",
                "command": "python.fixRuffViolations",
                "shortcut": "shift-cmd-opt-8",
                "filters": {
                    "syntaxes": ["python"]
                }
            },
            {
                "title": "Organize Imports",
                "paletteTitle": "Organize Imports (Ruff)",
                "command": "python.organizeImports",
                "shortcut": "shift-opt-O",
                "filters": {
                    "syntaxes": ["python"]
                }
            }
        ],
        "extensions": [
            {
                "title": "Restart Pyright",
                "command": "python.restartPyright"
            },
            {
                "title": "Freeze Requirements",
                "paletteTitle": "Freeze Requirements (Pip)",
                "command": "python.pipFreeze"
            },
            {
                "title": "Upgrade All Requirements",
                "paletteTitle": "Upgrade All Requirements (Pip)",
                "command": "python.upgradeAllPackages"
            },
            {
                "title": "Format Workspace",
                "paletteTitle": "Format Workspace (Black)",
                "command": "python.formatWorkspace",
                "shortcut": "cmd-shift-opt-B"
            }
        ]
    },

    "issueMatchers": {
        "ruff": {
            "pattern": {
                "regexp": "^::(\\w+)\\stitle=.+,file=.+,line=(\\d+),col=(\\d+),endLine=(\\d+),endColumn=(\\d+)::.+:\\d+:\\s(\\w+)\\s(.*)",
                "message": 7,
                "code": 6,
                "line": 2,
                "column": 3,
                "endLine": 4,
                "endColumn": 5,
                "severity": 1
            }
        }
    },

    "sidebars": [
        {
            "id": "python.packages",
            "name": "Packages",
            "smallImage": "sidebar-small",
            "largeImage": "sidebar-large",
            "sections": [
                {
                    "id": "python.packages.installed",
                    "name": "Installed Packages",
                    "placeholderText": "Reload to show package information.",
                    "allowMultiple": true,
                    "headerCommands": [
                        {
                            "title": "Upgrade All",
                            "image": "update",
                            "command": "python.upgradeAllPackages",
                            "tooltip": "Upgrade all requirements"
                        },
                        {
                            "title": "Freeze",
                            "image": "freeze",
                            "command": "python.pipFreeze",
                            "tooltip": "Freeze requirements"
                        },
                        {
                            "title": "Refresh",
                            "image": "reload",
                            "command": "python.reloadPackages",
                            "tooltip": "Refresh the list of installed packages"
                        }
                    ],
                    "contextCommands": [
                        {
                            "title": "Upgrade to latest version",
                            "command": "python.upgradeSelectedPackages",
                            "when": "viewItem != null"
                        }
                    ]
                }
            ]
        }
    ],

    "taskTemplates": {
        "virtualenv": {
            "name": "Virtual Environment",
            "description": "Run scripts or Python modules in an activated virtual environment.",
            "image": "python-nova",
            "tasks": {
                "run": {
                    "resolve": "virtualenv",
                    "data": { "type": "run" }
                }
            },
            "config": [
                {
                    "key": "script",
                    "title": "Script",
                    "type": "path",
                    "relative": true,
                    "description": "The path to a script to run with the virtual environment activated. This option is mutually exclusive with \"Module\". If both are specified, the script will be preferred."
                },
                {
                    "key": "module",
                    "title": "Module",
                    "type": "string",
                    "description": "The name of a Python module to executing using the virtual environment's Python interpreter. This option is mutually exclusive with \"Script\". If both are specified, the script will be preferred."
                },
                {
                    "key": "args",
                    "title": "Arguments",
                    "description": "Custom arguments to pass to the target.",
                    "type": "stringArray"
                },
                {
                    "key": "workdir",
                    "title": "Working Directory",
                    "description": "The working directory in which to invoke the script. By default, the project folder is used.",
                    "type": "path",
                    "placeholder": "Project Root",
                    "allowFiles": false,
                    "allowFolders": true,
                    "relative": true
                }
            ]
        }
    }
}
