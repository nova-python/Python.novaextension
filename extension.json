{
    "identifier": "net.danwatson.Python",
    "name": "Python",
    "organization": "Dan Watson",
    "description": "Batteries-included Python support for Nova.",
    "version": "1.3.1",
    "categories": [
        "commands",
        "languages",
        "sidebars",
        "formatters",
        "issues",
        "tasks"
    ],
    "repository": "https://github.com/nova-python/Python.novaextension",
    "bugs": "https://github.com/nova-python/Python.novaextension/issues",

    "main": "main.js",

    "entitlements": {
        "process": true,
        "filesystem": "readwrite"
    },

    "activationEvents": [
        "onLanguage:python",
        "onWorkspaceContains:*.py",
        "onWorkspaceContains:requirements.txt",
        "onWorkspaceContains:requirements.in",
        "onWorkspaceContains:requirements.lock",
        "onWorkspaceContains:pyrightconfig.json",
        "onWorkspaceContains:pyproject.toml",
        "onCommand:python.resolveEnvs"
    ],

    "config": "config.json",

    "configWorkspace": "configWorkspace.json",

    "commands": {
        "editor": [
            {
                "title": "Format",
                "paletteTitle": "Format",
                "command": "python.format",
                "shortcut": "cmd-shift-B",
                "filters": {
                    "syntaxes": ["python"]
                }
            },
            {
                "title": "Check",
                "paletteTitle": "Check Violations",
                "command": "python.check",
                "shortcut": "shift-cmd-8",
                "filters": {
                    "syntaxes": ["python"]
                }
            },
            {
                "title": "Fix",
                "paletteTitle": "Fix Violations",
                "command": "python.fix",
                "shortcut": "shift-cmd-opt-8",
                "filters": {
                    "syntaxes": ["python"]
                }
            },
            {
                "title": "Organize Imports",
                "paletteTitle": "Organize Imports",
                "command": "python.organizeImports",
                "shortcut": "shift-opt-O",
                "filters": {
                    "syntaxes": ["python"]
                }
            }
        ],
        "extensions": [
            {
                "title": "Restart Pyright",
                "command": "python.restartPyright"
            },
            {
                "title": "Freeze Requirements",
                "paletteTitle": "Freeze Requirements (Pip)",
                "command": "python.pipFreeze"
            },
            {
                "title": "Upgrade All Requirements",
                "paletteTitle": "Upgrade All Requirements (Pip)",
                "command": "python.upgradeAllPackages"
            },
            {
                "title": "Install Package",
                "paletteTitle": "Install Package (Pip)",
                "command": "python.pipInstall"
            },
            {
                "title": "Uninstall Package",
                "paletteTitle": "Uninstall Package (Pip)",
                "command": "python.pipUninstall"
            },
            {
                "title": "Format Workspace",
                "paletteTitle": "Format (Workspace)",
                "command": "python.formatWorkspace",
                "shortcut": "cmd-shift-opt-B"
            },
            {
                "title": "Fix All Workspace Violations",
                "paletteTitle": "Fix Violations (Workspace)",
                "command": "python.fixWorkspace"
            },
            {
                "title": "Organize All Workspace Imports",
                "paletteTitle": "Organize Imports (Workspace)",
                "command": "python.organizeWorkspace"
            },
            {
                "title": "Fix and Organize All Workspace Imports",
                "paletteTitle": "Fix and Organize Imports (Workspace)",
                "command": "python.fixOrganizeWorkspace"
            },
            {
                "title": "Clean Workspace",
                "command": "python.cleanWorkspace",
                "shortcut": "cmd-shift-opt-K"
            }
        ]
    },

    "issueMatchers": {
        "ruff": {
            "pattern": {
                "regexp": "^::(\\w+)\\stitle=.+,file=.+,line=(\\d+),col=(\\d+),endLine=(\\d+),endColumn=(\\d+)::.+:\\d+:\\s(\\w+)\\s(.*)",
                "message": 7,
                "code": 6,
                "line": 2,
                "column": 3,
                "endLine": 4,
                "endColumn": 5,
                "severity": 1
            }
        }
    },

    "sidebars": [
        {
            "id": "python.packages",
            "name": "Packages",
            "smallImage": "sidebar-small",
            "largeImage": "sidebar-large",
            "sections": [
                {
                    "id": "python.packages.installed",
                    "name": "Installed Packages",
                    "placeholderText": "Reload to show package information.",
                    "allowMultiple": true,
                    "headerCommands": [
                        {
                            "title": "Install",
                            "image": "__builtin.add",
                            "command": "python.pipInstall",
                            "tooltip": "Install package(s)"
                        },
                        {
                            "title": "Refresh",
                            "image": "reload",
                            "command": "python.reloadPackages",
                            "tooltip": "Refresh the list of installed packages"
                        },
                        {
                            "title": "Freeze",
                            "image": "freeze",
                            "command": "python.pipFreeze",
                            "tooltip": "Freeze requirements"
                        },
                        {
                            "title": "Upgrade All",
                            "image": "update",
                            "command": "python.upgradeAllPackages",
                            "tooltip": "Upgrade all requirements"
                        }
                    ],
                    "contextCommands": [
                        {
                            "title": "Upgrade to latest version",
                            "command": "python.upgradeSelectedPackages",
                            "when": "viewItem != null"
                        },
                        {
                            "title": "Uninstall",
                            "command": "python.uninstallSelectedPackages",
                            "when": "viewItem != null"
                        }
                    ]
                }
            ]
        }
    ],

    "taskTemplates": {
        "cleanup": {
            "name": "Python Cleanup",
            "description": "Clean up cache files and build artifacts.",
            "image": "python-nova",
            "tasks": {
                "clean": {
                    "resolve": "net.danwatson.Python",
                    "data": { "name": "cleanup" }
                }
            },
            "config": [
                {
                    "key": "python.cleanupCacheFiles",
                    "title": "Clean cache files and directories",
                    "description": "Removes all *.pyc files and __pycache__ directories.",
                    "type": "boolean",
                    "default": true
                },
                {
                    "key": "python.cleanupBuildDirs",
                    "title": "Clean build artifacts",
                    "description": "Removes top-level dist, build, and egg-info directories.",
                    "type": "boolean",
                    "default": false
                },
                {
                    "key": "python.cleanupExtras",
                    "title": "Clean additional files or directories",
                    "description": "Removes additional files or directories relative to your workspace root.",
                    "type": "pathArray",
                    "allowFiles": true,
                    "allowFolders": true,
                    "relative": true
                }
            ]
        },
        "virtualenv": {
            "name": "Virtual Environment",
            "description": "Run scripts or Python modules in an activated virtual environment.",
            "image": "python-nova",
            "tasks": {
                "run": {
                    "resolve": "net.danwatson.Python",
                    "data": { "name": "run" }
                }
            },
            "config": [
                {
                    "key": "script",
                    "title": "Script",
                    "type": "path",
                    "relative": true,
                    "description": "The path to a script to run with the virtual environment activated. This option is mutually exclusive with \"Module\". If both are specified, the script will be preferred."
                },
                {
                    "key": "module",
                    "title": "Module",
                    "type": "string",
                    "description": "The name of a Python module to executing using the virtual environment's Python interpreter. This option is mutually exclusive with \"Script\". If both are specified, the script will be preferred."
                },
                {
                    "key": "args",
                    "title": "Arguments",
                    "description": "Custom arguments to pass to the target.",
                    "type": "stringArray"
                },
                {
                    "key": "workdir",
                    "title": "Working Directory",
                    "description": "The working directory in which to invoke the script. By default, the project folder is used.",
                    "type": "path",
                    "placeholder": "Project Root",
                    "allowFiles": false,
                    "allowFolders": true,
                    "relative": true
                }
            ]
        }
    }
}
